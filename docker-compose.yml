version: '3.1'

services:
  watchtower:
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/timezone:/etc/timezone:ro
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
  backend:
    image: ghcr.io/gipplab/cs-insights-backend:latest
    depends_on:
      - mongo
    restart: always
    env_file: .env
    command: npm run cluster
    expose:
      - 3000
    ports:
      - 3000:3000
    environment:
      MONGO_HOST: ${MONGO_HOST}
    secrets:
      - mongo_user
      - mongo_password
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
  mongo:
    image: mongo:5.0.9
    restart: always
    env_file: .env
    expose:
      - 27017
    command: mongod
    volumes:
      - ~/mongo/data:/data/db
  frontend:
    image: ghcr.io/gipplab/cs-insights-frontend:latest
    restart: always
    env_file: .env
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - /cs-insights-frontend/build:/usr/share/nginx/html
      - /cs-insights-frontend/nginx.conf:/etc/nginx/conf.d/default.conf
  prediction-endpoint:
    image: ghcr.io/gipplab/cs-insights-prediction-endpoint:latest
    restart: always
    env_file: .env
    command: poetry run python -m prod --workers 2
    secrets:
      - mongo_user
      - mongo_password
      - jwt_secret
    expose:
      - 8000
    ports:
      - 8000:8000
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - ~/prediction-endpoint/saved_models:/cs-insights-prediction-endpoint/saved_models
secrets:
  mongo_user:
    file: mongo_user.txt
  mongo_password:
    file: mongo_password.txt
  jwt_secret:
    file: jwt_secret.txt